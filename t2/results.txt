optimized -O3
1000 runs so 2000 lines out output
42us per run first time
37us per run 2nd time
echo(number_format($a[1999] - $a[0])); // === 36,961,416 === 36.9... ms
printf("%d" or ul / lu equivalent)
*************
the binary version is only slightly faster at 35,475,411
*****
10,000 binary 36us, then 34.5
printf() version is no different
*********
100,000 no difference, roughly 32 - 34 versus 31 - 34
******
1M - binary - 29.7, 29.2
	turned off NetBeans and about everything else - 28.6, 29.7
1M - printf - some typing, GEdit up - 30.3, 31.7, 30.8
1M - binary again, apples to apples with GEdit running - 28.8, 	28.7
So binary seems to make some difference
*************
tested 1M binary version of my simple time service - first result with NetBeans running, running in NetBeans, in fact, is 21.7
With just GEdit running, 21.2
That's with only 1 time, though, as opposed to 48 byte pack
Then again, that's the only thing that's fair to compare.  
100K string version of my STS 25.2, 24.8
1M string 23.5 with NetBeans doing the running; 22.7 with nothing large running, and GEdit not running
************
As a different, question, what is the average difference between server receive and server send?  
Around 11 - 15us
**
Returning to that question, the traces are very interesting when iterated.  I always get something like this:

101,528
76,131
74,897
60,016
66,467
72,289
80,707
25,688
15,776
15,608
15,709
15,410
15,373
15,183
14,204
12,378
12,403
12,438
12,401
12,454
12,381
12,333
12,012
11,877
12,290

